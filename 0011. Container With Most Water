/**
 *  You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith
 *  line are (i, 0) and (i, height[i]).
 *
 *  Find two lines that together with the x-axis form a container, such that the container contains the most water.
 *
 *  Return the maximum amount of water a container can store.
 *
 *  Notice that you may not slant the container.
 */

int maxArea(int* height, int heightSize){
    int max_area = 0;
    int sptr = 0, eptr = heightSize - 1;
    int tmp_height = 0, area = 0;
    
    while (sptr < eptr) {
        if(height[sptr] < height[eptr]){
            tmp_height = height[sptr];
        }
        else{
            tmp_height = height[eptr];
        }
        area = (eptr - sptr) * tmp_height;
        
        if (area > max_area) {
            max_area = area;
        }
        while (height[sptr] <= tmp_height && sptr < eptr){
            sptr++;
        } 
        while (height[eptr] <= tmp_height && sptr < eptr) {
            eptr--;
        }
    }
    return max_area;
}
