/**
 *  Given a non-negative integer x, compute and return the square root of x.
 *  Since the return type is an integer, the decimal digits are truncated, and only the integer part of the result is returned.
 *  Note: You are not allowed to use any built-in exponent function or operator, such as pow(x, 0.5) or x ** 0.5.
 */ 
 
 int mySqrt(int x){
    int upper_bound = x;
    int lower_bound = 0;
    long cur = x >> 1;
    long mul = 0;
    
    if(x == 0 || x == 1){
        return x;
    }

    do {
        mul = (long)cur * (long)cur;
        if (mul == x) {
            return cur;
        }
        else if(mul > x){
            upper_bound = cur;
        }
        else if(mul < x){
            lower_bound = cur;
        }
        cur = (lower_bound + upper_bound) >> 1;
        if(upper_bound - lower_bound == 1){
            return lower_bound;
        }
    } while (1);
    return lower_bound;
}
