/**
 *  You have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the ith row has
 *  exactly i coins. The last row of the staircase may be incomplete.
 *  Given the integer n, return the number of complete rows of the staircase you will build.
 */
 
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

long sum(long hn){
    return (((1 + hn) * hn) >> 1);
}

int arrangeCoins(int n){
    int upper_bound = n;
    int lower_bound = 0;
    long cur = n >> 1;
    long mul = 0;
    
    if(n == 0 || n == 1){
        return n;
    }

    do {
        mul = sum(cur);
        if (mul == n) {
            return cur;
        }
        else if(mul > n){
            upper_bound = cur;
        }
        else if(mul < n){
            lower_bound = cur;
        }
        cur = (lower_bound + upper_bound) >> 1;
        if(upper_bound - lower_bound == 1){
            return lower_bound;
        }
    } while (1);
    return lower_bound;
}

int main(int argc, char *argv[])
{
    int n = 1804289383;
    int ret = arrangeCoins(n);
    printf("ret = %d\n", ret);
    return 0;
}
